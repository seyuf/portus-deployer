version: "2"

services:
  portus:
    #image: opensuse/portus:head
    image: opensuse/portus:2.4.3
    environment:
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
        #- PATH=/srv/Portus/bin:${PATH}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      #Email smtp configs 
      - PORTUS_EMAIL_SMTP_ENABLED=true
      - PORTUS_EMAIL_SMTP_ADDRESS=""
      - PORTUS_EMAIL_SMTP_PORT=
      - PORTUS_EMAIL_SMTP_USER_NAME=""
      - PORTUS_EMAIL_SMTP_PASSWORD=""
      - PORTUS_EMAIL_SMTP_DOMAIN=""
      - PORTUS_EMAIL_FROM=""
      - PORTUS_EMAIL_NAME="Portus registry"
      - PORTUS_REGISTRY_JWT_EXPIRATION_TIME_VALUE=10
      - PORTUS_REGISTRY_READ_TIMEOUT=120
      - PORTUS_REGISTRY_TIMEOUT=10
      - PORTUS_REGISTRY_CATALOG_PAGE=120

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/portus.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

      # SSL
      - PORTUS_PUMA_TLS_KEY=/certificates/portus.key
      - PORTUS_PUMA_TLS_CERT=/certificates/portus.crt

      # NGinx is serving the assets instead of Puma. If you want to change this,
      # uncomment this line.
      - RAILS_SERVE_STATIC_FILES='true'
    ports:
      - 3000:3000
    links:
      - db
    volumes:
      - ./secrets:/certificates:ro
      - static:/srv/Portus/public


  background:
    image: opensuse/portus:head
          #image: opensuse/portus:2.4.3
    depends_on:
      - portus
      - db
    environment:
      # Theoretically not needed, but cconfig's been buggy on this...
      - CCONFIG_PREFIX=PORTUS
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
        #- PATH=/srv/Portus/bin:${PATH}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/portus.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

        #- PORTUS_BACKGROUND=true
        #- PORTUS_BACKGROUND_SYNC_STRATEGY=update-delete


      - PORTUS_BACKGROUND=true
        #- PORTUS_BACKGROUND_REGISTRY_ENABLED=true
        #- PORTUS_BACKGROUND_SYNC_ENABLED=true
        #- PORTUS_BACKGROUND_SYNC_STRATEGY=update

    links:
      - db
    volumes:
      - ./secrets:/certificates:ro

  db:
    image: library/mariadb:10.0.23
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    environment:
      - MYSQL_DATABASE=portus_production

      # Again, the password shouldn't be handled like this.
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - /var/lib/portus/mariadb:/var/lib/mysql

  registry:
    image: library/registry:2.6
    command: ["/bin/sh", "/etc/docker/registry/init"]
    environment:
      # Authentication
      #REGISTRY_AUTH_TOKEN_REALM: https://0.0.0.0/v2/token
      REGISTRY_AUTH_TOKEN_REALM: https://registry.my-domain.fr/v2/token
      REGISTRY_AUTH_TOKEN_SERVICE: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ISSUER: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /secrets/portus.crt
      REGISTRY_HTTP_SECRET: ${SECRET_KEY_BASE}


      #      REGISTRY_HTTP_ADDR: 0.0.0.0:5000
      #      REGISTRY_HTTP_DEBUG_ADDR: 0.0.0.0:5001


      # SSL
      REGISTRY_HTTP_TLS_CERTIFICATE: /secrets/portus.crt
      REGISTRY_HTTP_TLS_KEY: /secrets/portus.key

      # Portus endpoint
      REGISTRY_NOTIFICATIONS_ENDPOINTS: >
        - name: portus
          #url: https://0.0.0.0:3000/v2/webhooks/events
          url: https://${MACHINE_FQDN}/v2/webhooks/events
          timeout: 2000ms
          threshold: 5
          backoff: 1s
    volumes:
      - /var/lib/portus/registry:/var/lib/registry
      - ./secrets:/secrets:ro
      - ./secrets:/certs:ro
      - ./registry/config.yml:/etc/docker/registry/config.yml:ro
      - ./registry/init:/etc/docker/registry/init:ro
    ports:
      - 5000:5000
      - 5001:5001 # required to access debug service
    links:
      - portus:portus
volumes:
  static:
    driver: local

        #  nginx:
        #    image: library/nginx:alpine
        #    volumes:
        #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        #      - ./secrets:/secrets:ro
        #      - static:/srv/Portus/public:ro
        #    ports:
        #      - 80:80
        #      - 443:443
        #    links:
        #      - registry:registry
        #      - portus:portus

 
 
 
